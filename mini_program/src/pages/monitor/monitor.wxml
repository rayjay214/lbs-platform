<map id="map" longitude="{{currentDevice.lng || currentLongitude}}" latitude="{{currentDevice.lat || currentLatitude}}" scale="18" bindcontroltap="controltap" markers="{{markers}}" bindmarkertap="markertap" bindregionchange="regionchange" show-location circles="{{circles}}">
</map>
<cover-view class="btnContainer" wx:if="{{!noDevice}}">
    <cover-view class="alarm" bindtap="toAlarm" hover-class="clicked">   
        <cover-image src="./../images/alarm.png" class="bindImage">
        </cover-image>
    </cover-view>
    <cover-view class="line"></cover-view>
    <cover-view class="deviceList" hover-class="click" bindtap="toDeviceList">
        <cover-image src="./../images/deviceList.png"></cover-image>
    </cover-view>
</cover-view>
<cover-view class="voltage" wx:if="{{showVoltage}}">
     <cover-view class="voltageImgBox">
            <cover-image class="voltageImg" src="./../images/batteryEmpty.png"></cover-image>
            <cover-view class="voltageStatus"></cover-view>
        </cover-view>
        <cover-view class="voltageText">{{ voltage + "V"}}</cover-view>
</cover-view>
<cover-view class="shareLocation {{m1.addrAdjust(currentDevice)}}" wx:if="{{!noDevice}}">
    <button open-type="share">分享位置</button>
</cover-view>
<cover-view class="markerInfo" wx:if="{{!noDevice && !noData}}">
    <cover-view class="name">{{currentDevice.dev_name}}</cover-view>
    <cover-view class="lastLocation">
        <cover-view>最后定位时间：{{m1.getLastLocateTime(currentDevice)}}</cover-view>
    </cover-view>
    <cover-view class="address">
    {{currentDevice.address}}
    <cover-view class="navigation" bindtap="navigateTo" wx:if="{{showNav}}">前往</cover-view>
    </cover-view>
    <cover-view class="fullLine"></cover-view>
    <cover-view class="operation">
        <cover-view class="left">
            <cover-view class="detail" bindtap="toDetail">详情</cover-view>
            <cover-view class="line">|</cover-view>
            <cover-view class="playback" bindtap="toPlayback">回放</cover-view>
            <!--
            <cover-view class="line">|</cover-view>
            <cover-view class="command" bindtap="toCommand">指令</cover-view>
            -->
        </cover-view>
    </cover-view>
</cover-view>
<wxs module="m1">
    var showBattery = ''
    var getPowerText = function(obj) {         
        if (obj.acc === 0) {
            return '熄火'
        } else if (obj.acc === 1) {
            return '启动'
        } else {
            if (obj.power) {
                return '电量 ' + obj.power
            }
        }
        return ''
    }
    var getStatusClass = function(obj) {
        // "device_info_new":4, //0 正常 1 未启用 2 过期 3 离线 4 静止
        // 行驶绿色、静止蓝色、离线灰色
        if (obj.device_info_new === 4) {
            return 'stop'
        } else if (obj.device_info_new === 3) {
            return 'offline'
        } else if (obj.device_info_new === 0) {
            return 'normal'
        } else if (obj.device_info_new === 2) {
            return 'overdue'
        } else if (obj.device_info_new === 1) {
            return 'unused'
        }
    }
    var addrAdjust = function (obj) {
        if (obj.address) {

        }
    }
    var getTime = function(obj) {
        var statusArr = ['正常', '未启用', '过期', '离线', '静止']
        var time = obj.seconds
        var text = ''
        if (time >= 86400) {
            var day = parseInt(time / 86400)
            var hour = parseInt((time % 86400) / 3600)
            text = day + '天' + hour + '小时'
        } else {
            var hour = parseInt(time / 3600)
            var minute = parseInt((time % 3600) / 60)
            text = hour + '小时' + minute + '分钟'
        }

        return statusArr[obj.device_info_new] + text
    }
    var showTime = function (obj) {
        if (obj.device_info_new ===1) {
            return false
        } else {
            return true
        }
    }
    var getLastLocateTime = function (obj) {
        var date = getDate(obj.gps_time * 1000);
        var year = date.getFullYear();
        var month = (date.getMonth() + 1) >= 10 ? (date.getMonth() + 1) : '0'+ (date.getMonth() + 1);
        var day = date.getDate() >= 10 ? date.getDate() : '0' + date.getDate();
        var hour = date.getHours() >= 10 ? date.getHours() : '0' + date.getHours(); 
        var minute = date.getMinutes() >= 10 ? date.getMinutes() : '0' + date.getMinutes();
        var second = date.getSeconds() >= 10 ? date.getSeconds() : '0' + date.getSeconds();
        var t = year + ':' + month + ':' + day + ' ' + hour + ':' + minute + ':' + second;
        return t
    }
    module.exports.getPowerText = getPowerText
    module.exports.getStatusClass = getStatusClass
    module.exports.addrAdjust = addrAdjust
    module.exports.getTime = getTime
    module.exports.showTime = showTime
    module.exports.getLastLocateTime = getLastLocateTime
</wxs>
